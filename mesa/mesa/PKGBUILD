#Maintainer: archdevlab <https://github.com/archdevlab>
#Credits: Laurent Carlier <lordheavym@gmail.com>
#Credits: Felix Yan <felixonmars@archlinux.org>
#Credits: Jan de Groot <jgc@archlinux.org>
#Credits: Andreas Radke <andyrtr@archlinux.org>

pkgbase=mesa-git
pkgname=(
   vulkan-mesa-layers-git
   opencl-clover-mesa-git
   opencl-rusticl-mesa-git
   vulkan-intel-git
   vulkan-radeon-git
   vulkan-swrast-git
   vulkan-virtio-git
   libva-mesa-driver-git
   mesa-vdpau-git
   vulkan-imagination-git
   vulkan-nouveau-git
   intel_clc-git
   mesa-git
)
pkgver=24.1.0_devel.185734.63d2aa4eb64
pkgrel=1
commit=63d2aa4eb645e32ea3d5aea453a45aa6a3412e15
arch=(x86_64)
url='https://mesa3d.org/'
license=(MIT AND BSD-3-Clause AND SGI-B-2.0)
makedepends=(
   clang-minimal-git
   clang-libs-minimal-git
   expat
   libdrm-git
   libelf
   libglvnd-git
   libunwind
   libva
   libvdpau
   libx11
   libxdamage
   libxml2
   libxrandr
   libxshmfence
   libxxf86vm
   llvm-minimal-git
   llvm-libs-minimal-git
   lm_sensors
   rust
   spirv-llvm-translator-minimal-git
   spirv-tools-git
   systemd
   vulkan-icd-loader
   wayland
   xcb-util-keysyms
   zstd
   # shared between mesa and lib32-mesa
   clang-minimal-git
   cmake
   elfutils
   glslang-git
   libclc-minimal-git
   meson
   python-mako
   python-ply
   rust-bindgen
   wayland-protocols
   xorgproto
   # valgrind deps
   valgrind
   # d3d12 deps
   directx-headers-git
   # gallium-omx deps
   libomxil-bellagio
)
makedepends+=(
   ninja
   bison
   flex
   python
   libarchive
   libconfig
   compiler-rt-minimal-git
   libxcb
   ncurses
   libxv
   llvm-libs-minimal-git
)
options=(!debug !lto)
source=(git+https://anongit.freedesktop.org/git/mesa/mesa.git#commit="${commit}"
)

pkgver(){
  cd "${srcdir}"/mesa
  read -r _ver <VERSION
  echo ${_ver/-/_}.$(git rev-list --count HEAD).$(git rev-parse --short HEAD)
}

prepare(){
  cd "${srcdir}"/mesa

  # Apply any patch
  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    msg2 "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build(){
  rm -rf "${srcdir}"/build

  # gallium-opencl is disabled since this issue in mesa
  # https://gitlab.freedesktop.org/mesa/mesa/-/issues/8591
  # Now we can re-enable gallium-opencl : https://gitlab.freedesktop.org/mesa/mesa/-/issues/8591#note_2058098

  # use --force-fallback-for=syn to download syn required for vulkan-nouveau-git

  # enable install-intel-clc
  # https://gitweb.gentoo.org/repo/gentoo.git/tree/dev-util/intel_clc
  # https://gitlab.freedesktop.org/mesa/mesa/-/commit/1e31fd5f4268b134b26cd9d82d76d406332a3d8d
  # Install the intel-clc compiler (if needed for cross builds)
  # We need this, beacause we build lib32-mesa and include opencl-rusticl-mesa. In native build with llvm32.native
  # we get some error with rust. So when installing this package everything work fine

  local meson_options=(
    -D b_ndebug=true
    -D b_lto=false
    -D buildtype=plain
    --wrap-mode=nofallback
    --force-fallback-for=syn
    -D prefix=/usr
    -D bindir=bin
    -D datadir=share
    -D includedir=include
    -D libdir=lib
    -D sysconfdir=/etc
    -D platforms=x11,wayland
    -D egl-native-platform=auto
    -D android-stub=false
    -D android-libbacktrace=disabled
    -D dri3=enabled
    -D expat=auto
    -D gallium-drivers=r300,r600,radeonsi,nouveau,virgl,svga,swrast,i915,iris,zink,crocus,d3d12
    -D gallium-extra-hud=true
    -D gallium-vdpau=enabled
    -D gallium-omx=bellagio
    -D gallium-va=enabled
    -D gallium-xa=enabled
    -D gallium-nine=true
    -D gallium-d3d10umd=false
    -D gallium-opencl=icd
    -D gallium-rusticl=true
    -D rust_std=2021
    -D opencl-spirv=false
    -D static-libclc=all
    -D vulkan-drivers=amd,intel,intel_hasvk,swrast,virtio,imagination-experimental,nouveau
    -D imagination-srv=true
    -D shader-cache=enabled
    -D shader-cache-default=true
    -D vulkan-layers=device-select,intel-nullhw,overlay
    -D shared-glapi=enabled
    -D gles1=enabled
    -D gles2=enabled
    -D opengl=true
    -D gbm=enabled
    -D glx=dri
    -D egl=enabled
    -D glvnd=true
    -D microsoft-clc=disabled
    -D spirv-to-dxil=false
    -D glvnd-vendor-name=mesa
    -D glx-read-only-text=false
    -D llvm=enabled
    -D shared-llvm=enabled
    -D draw-use-llvm=true
    -D valgrind=enabled
    -D libunwind=enabled
    -D lmsensors=enabled
    -D build-tests=false
    -D enable-glcpp-tests=false
    -D build-aco-tests=false
    -D install-intel-gpu-tests=false
    -D selinux=false
    -D osmesa=true
    -D tools=[]
    -D power8=disabled
    -D xlib-lease=enabled
    -D glx-direct=true
    -D zstd=enabled
    -D zlib=enabled
    -D sse2=false
    -D perfetto=false
    -D teflon=false
    -D gpuvis=false
    -D vmware-mks-stats=false
    -D vulkan-beta=true
    -D intel-clc=enabled
    -D install-intel-clc=true
    -D intel-rt=enabled
    -D gallium-d3d12-video=enabled
    -D video-codecs=all
    -D intel-xe-kmd=enabled
  )

  meson "${srcdir}"/mesa "${srcdir}"/build "${meson_options[@]}"
  meson configure --no-pager "${srcdir}"/build
  meson compile -C "${srcdir}"/build

  # fake installation to be seperated into packages
  # outside of fakeroot but mesa doesn't need to chown/mod
  DESTDIR="${srcdir}"/fakeinstall meson install -C "${srcdir}"/build
}

_install(){
  local src f dir
  for src; do
    f="${src#fakeinstall/}"
    dir="${pkgdir}/${f%/*}"
    install -m755 -d "${dir}"
    mv -v "${src}" "${dir}/"
  done
}

_libdir=usr/lib

package_vulkan-mesa-layers-git(){
  pkgdesc="Mesa's Vulkan layers (git version)"
  depends=(
     libdrm-git
     libxcb
     wayland
     python
  )
  provides=(
     vulkan-mesa-layers
  )
  conflicts=(
     vulkan-mesa-layer
     vulkan-mesa-layers
  )
  replaces=(
     vulkan-mesa-layer
  )

  _install fakeinstall/usr/share/vulkan/explicit_layer.d
  _install fakeinstall/usr/share/vulkan/implicit_layer.d
  _install fakeinstall/"${_libdir}"/libVkLayer_*.so
  _install fakeinstall/usr/bin/mesa-overlay-control.py


  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

# https://gitlab.freedesktop.org/mesa/mesa/-/issues/8591
# Now we can re-enable gallium-opencl : https://gitlab.freedesktop.org/mesa/mesa/-/issues/8591#note_2058098
package_opencl-clover-mesa-git(){
  pkgdesc="OpenCL support with clover for mesa drivers (git version)"
  depends=(
     clang-minimal-git
     clang-libs-minimal-git
     expat
     libdrm-git
     libelf
     spirv-llvm-translator-minimal-git
     zstd
     libclc-git
  )
  optdepends=('opencl-headers: headers necessary for OpenCL development')
  provides=(
     opencl-driver
     opencl-clover-mesa
  )
  conflicts=(
     opencl-mesa
     opencl-mesa-git
  )
  replaces=(
     "opencl-mesa<=23.1.4-1"
     opencl-mesa-git
  )

  _install fakeinstall/etc/OpenCL/vendors/mesa.icd
  _install fakeinstall/"${_libdir}"/libMesaOpenCL*
  _install fakeinstall/"${_libdir}"/gallium-pipe

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_opencl-rusticl-mesa-git(){
  pkgdesc="OpenCL support with rusticl for mesa drivers (git version)"
  depends=(
     clang-minimal-git
     clang-libs-minimal-git
     expat
     libdrm-git
     libelf
     lm_sensors
     spirv-llvm-translator-minimal-git
     zstd
     libclc-minimal-git
  )
  optdepends=('opencl-headers: headers necessary for OpenCL development')
  provides=(
     opencl-driver
     opencl-rusticl-mesa
  )
  conflicts=(
     opencl-mesa
     opencl-mesa-git
  )
  replaces=(
     "opencl-mesa<=23.1.4-1"
     opencl-mesa-git
  )

  _install fakeinstall/etc/OpenCL/vendors/rusticl.icd
  _install fakeinstall/"${_libdir}"/libRusticlOpenCL*

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_vulkan-intel-git(){
  pkgdesc="Intel's Vulkan mesa driver (git version)"
  depends=(
     libdrm-git
     libx11
     libxshmfence
     systemd
     wayland
     xcb-util-keysyms
     zstd
  )
  optdepends=('vulkan-mesa-layers: additional vulkan layers')
  provides=(
     vulkan-driver
     vulkan-intel
  )
  conflicts=(
     vulkan-intel
     vulkan-intel-hasvk-git
  )
  replaces=(
     vulkan-intel-hasvk-git
  )

  _install fakeinstall/usr/share/vulkan/icd.d/intel_*.json
  _install fakeinstall/"${_libdir}"/libvulkan_intel*.so

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_vulkan-radeon-git(){
  pkgdesc="Radeon's Vulkan mesa driver (git version)"
  depends=(
     libdrm-git
     libelf
     libx11
     libxshmfence
     llvm-libs-minimal-git
     systemd
     wayland
     xcb-util-keysyms
     zstd
  )
  optdepends=('vulkan-mesa-layers: additional vulkan layers')
  provides=(
     vulkan-driver
     vulkan-radeon
  )
  conflicts=(
     vulkan-radeon
  )

  _install fakeinstall/usr/share/drirc.d/00-radv-defaults.conf
  _install fakeinstall/usr/share/vulkan/icd.d/radeon_icd*.json
  _install fakeinstall/"${_libdir}"/libvulkan_radeon.so

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_vulkan-swrast-git(){
  pkgdesc='Vulkan software rasteriser driver (git version)'
  depends=(
     libdrm-git
     libunwind
     libx11
     libxshmfence
     llvm-libs-minimal-git
     systemd
     wayland
     xcb-util-keysyms
     zstd
  )
  optdepends=('vulkan-mesa-layers: additional vulkan layers')
  provides=(
     vulkan-driver
     vulkan-swrast
  )
  conflicts=(
     vulkan-mesa
     vulkan-swrast
  )
  replaces=(
     vulkan-mesa
  )

  _install fakeinstall/usr/share/vulkan/icd.d/lvp_icd*.json
  _install fakeinstall/"${_libdir}"/libvulkan_lvp.so

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_vulkan-virtio-git(){
  pkgdesc='Venus Vulkan mesa driver for Virtual Machines (git version)'
  depends=(
     libdrm-git
     libx11
     libxshmfence
     systemd
     wayland
     xcb-util-keysyms
     zstd
  )
  optdepends=('vulkan-mesa-layers: additional vulkan layers')
  provides=(
     vulkan-driver
     vulkan-virtio
  )
  conflicts=(
     vulkan-virtio
  )

  _install fakeinstall/usr/share/vulkan/icd.d/virtio_icd*.json
  _install fakeinstall/"${_libdir}"/libvulkan_virtio.so

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_libva-mesa-driver-git(){
  pkgdesc='VA-API drivers (git version)'
  depends=(
     expat
     libdrm-git
     libelf
     libx11
     libxshmfence
     llvm-libs-minimal-git
     zstd
  )
  provides=(
     libva-driver
     libva-mesa-driver
  )
  conflicts=(
     libva-mesa-driver
  )

  _install fakeinstall/"${_libdir}"/dri/*_drv_video.so

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_mesa-vdpau-git(){
  pkgdesc='VDPAU drivers (git version)'
  depends=(
     expat
     libdrm-git
     libelf
     libx11
     libxshmfence
     llvm-libs-minimal-git
     zstd
  )
  provides=(
     vdpau-driver
     mesa-vdpau
  )
  conflicts=(
     mesa-vdpau
  )
  _install fakeinstall/"${_libdir}"/vdpau

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_vulkan-imagination-git(){
  pkgdesc='Imagination Rogue PowerVR Vulkan driver (git version)'
  depends=(
     libdrm-git
     libelf
     libx11
     libunwind
     libxshmfence
     systemd
     llvm-libs-minimal-git
     wayland
     xcb-util-keysyms
     zstd
  )
  optdepends=('vulkan-mesa-layers: additional vulkan layers')
  provides=(
     vulkan-driver
  )

  _install fakeinstall/usr/share/vulkan/icd.d/powervr_mesa_icd*.json
  _install fakeinstall/"${_libdir}"/libvulkan_powervr_mesa.so

  # imagination-srv
  # Services backend for Imagination Technologies vulkan driver
  _install fakeinstall/"${_libdir}"/libpowervr_rogue.so

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_vulkan-nouveau-git(){
  pkgdesc="Nvidia's Vulkan mesa driver (git version)"
  depends=(
     libdrm-git
     libelf
     libx11
     libunwind
     libxshmfence
     systemd
     llvm-libs-minimal-git
     wayland
     xcb-util-keysyms
     zstd
  )
  optdepends=('vulkan-mesa-layers: additional vulkan layers')
  provides=(
     vulkan-driver
  )

  _install fakeinstall/usr/share/vulkan/icd.d/nouveau_icd*.json
  _install fakeinstall/"${_libdir}"/libvulkan_nouveau.so

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

# https://gitweb.gentoo.org/repo/gentoo.git/tree/dev-util/intel_clc
# https://gitlab.freedesktop.org/mesa/mesa/-/commit/1e31fd5f4268b134b26cd9d82d76d406332a3d8d
# Install the intel-clc compiler (if needed for cross builds)

# We need this, beacause we build lib32-mesa and include opencl-rusticl-mesa. In native build with llvm32.native
# we get some error with rust. So when installing this package everything work fine
package_intel_clc-git(){
  pkgdesc='Intel_clc tool used for building OpenCL C to SPIR-V (git version)'
  depends=(
     libclc-minimal-git
     spirv-tools-git
     zlib
     libdrm-git
     spirv-llvm-translator-minimal-git
     clang-minimal-git
     clang-libs-minimal-git
     llvm-minimal-git
     llvm-libs-minimal-git
     expat
   )

  _install fakeinstall/usr/bin/intel_clc

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_mesa-git(){
  pkgdesc='An open-source implementation of the OpenGL specification (git version)'
  depends=(
     libdrm-git
     libelf
     libglvnd-git
     libunwind
     libxdamage
     libxshmfence
     libxxf86vm
     llvm-libs-minimal-git
     lm_sensors
     vulkan-icd-loader
     wayland
     zstd
     libomxil-bellagio
  )
  optdepends=(
     'opengl-man-pages: for the OpenGL API man pages'
  )
  provides=(
     mesa-libgl
     opengl-driver
     mesa
  )
  conflicts=(
     mesa-libgl
     mesa
  )
  replaces=(
     mesa-libgl
  )

  _install fakeinstall/usr/share/drirc.d/00-mesa-defaults.conf
  _install fakeinstall/usr/share/glvnd/egl_vendor.d/50_mesa.json

  # ati-dri, nouveau-dri, intel-dri, svga-dri, swrast, swr
  _install fakeinstall/"${_libdir}"/dri/*_dri.so

  _install fakeinstall/"${_libdir}"/bellagio
  _install fakeinstall/"${_libdir}"/d3d
  _install fakeinstall/"${_libdir}"/lib{gbm,glapi}.so*
  _install fakeinstall/"${_libdir}"/libOSMesa.so*
  _install fakeinstall/"${_libdir}"/libxatracker.so*

  _install fakeinstall/usr/include
  _install fakeinstall/"${_libdir}"/pkgconfig

  # libglvnd support
  _install fakeinstall/"${_libdir}"/libGLX_mesa.so*
  _install fakeinstall/"${_libdir}"/libEGL_mesa.so*

  # indirect rendering
  ln -sr "${pkgdir}"/"${_libdir}"/libGLX_{mesa,indirect}.so.0

  # make sure there are no files left to install
  find fakeinstall -depth -print0 | xargs -0 rmdir

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

sha256sums=(SKIP)
