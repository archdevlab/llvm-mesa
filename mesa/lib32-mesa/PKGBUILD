#Maintainer: archdevlab <https://github.com/archdevlab>
#Credits: Laurent Carlier <lordheavym@gmail.com>
#Credits: Felix Yan <felixonmars@archlinux.org>
#Credits: Jan de Groot <jgc@archlinux.org>
#Credits: Andreas Radke <andyrtr@archlinux.org>

pkgbase=lib32-mesa-git
pkgname=(
   lib32-vulkan-mesa-layers-git
   lib32-opencl-clover-mesa-git
   lib32-opencl-rusticl-mesa-git
   lib32-vulkan-intel-git
   lib32-vulkan-radeon-git
   lib32-vulkan-swrast-git
   lib32-vulkan-virtio-git
   lib32-libva-mesa-driver-git
   lib32-mesa-vdpau-git
   lib32-vulkan-imagination-git
   lib32-vulkan-nouveau-git
   lib32-mesa-git
)
pkgver=24.1.0_devel.186395.7bd1d4848cf
pkgrel=1
commit=7bd1d4848cf755257644e9b79289a364db659026
arch=(x86_64)
url='https://mesa3d.org/'
license=(MIT AND BSD-3-Clause AND SGI-B-2.0)
makedepends=(
   lib32-clang-minimal-git
   lib32-clang-libs-minimal-git
   lib32-expat
   lib32-libdrm-git
   lib32-libelf
   lib32-libglvnd-git
   lib32-libunwind
   lib32-libva
   lib32-libvdpau
   lib32-libx11
   lib32-libxdamage
   lib32-libxml2
   lib32-libxrandr
   lib32-libxshmfence
   lib32-libxxf86vm
   lib32-llvm-minimal-git
   lib32-llvm-libs-minimal-git
   lib32-lm_sensors
   lib32-rust-libs
   lib32-spirv-llvm-translator-minimal-git
   lib32-spirv-tools-git
   lib32-systemd
   lib32-vulkan-icd-loader
   lib32-wayland
   lib32-xcb-util-keysyms
   lib32-zstd
   # shared between mesa and lib32-mesa
   clang-minimal-git
   clang-libs-minimal-git
   cmake
   elfutils
   glslang-git
   libclc-minimal-git
   meson
   python-mako
   python-ply
   rust-bindgen
   wayland-protocols
   xorgproto
)
makedepends+=(
   ninja
   bison
   flex
   python
   libarchive
   libconfig
   compiler-rt-minimal-git
   lib32-compiler-rt-minimal-git
   libxcb
   lib32-libxcb
   ncurses
   libxv
   lib32-libxv
   llvm-libs-minimal-git
   intel_clc-git
)
options=(!debug !lto)
source=(git+https://anongit.freedesktop.org/git/mesa/mesa.git#commit="${commit}"
        nouveau-add-missing-vl-lib.patch::https://gitlab.freedesktop.org/mesa/mesa/-/commit/4e3f3c10e14d8778781c81f39ced659b5ec2f148.patch)

pkgver(){
  cd "${srcdir}"/mesa
  read -r _ver <VERSION
  echo ${_ver/-/_}.$(git rev-list --count HEAD).$(git rev-parse --short HEAD)
}

prepare(){
  cd "${srcdir}"/mesa

  # # Apply any patch
  #local src
  #for src in "${source[@]}"; do
  #  src="${src%%::*}"
  #  src="${src##*/}"
  #  [[ $src = *.patch ]] || continue
  #  msg2 "Applying patch $src..."
  #  patch -Np1 < "../$src"
  #done

  # revert commit
  # https://gitlab.freedesktop.org/mesa/mesa/-/issues/10830
  patch --reverse --strip=1 --input="${srcdir}"/nouveau-add-missing-vl-lib.patch
}

build(){
export CFLAGS+=" -m32"
export CXXFLAGS+=" -m32"
export LDFLAGS+=" -m32"
export ASFLAGS+=" --32"
export PKG_CONFIG="i686-pc-linux-gnu-pkg-config"
export PKG_CONFIG_PATH="/usr/lib32/pkgconfig"
export BINDGEN_EXTRA_CLANG_ARGS=" -m32"

  rm -rf "${srcdir}"/build

  # gallium-opencl is disabled since this issue in mesa
  # https://gitlab.freedesktop.org/mesa/mesa/-/issues/8591
  # Now we can re-enable gallium-opencl : https://gitlab.freedesktop.org/mesa/mesa/-/issues/8591#note_2058098

  # use --force-fallback-for=syn to download syn required for lib32-vulkan-nouveau-git

  # set intel-clc to system. We ship intel_clc-git in x86_64 mesa package. This make 32-bit build work again
  # after the massive change intel made to the mesa driver.
  # If we do a native build with llvm32.native wee don't need this, but we get some errors with rust. Need
  # to do some investigations

  local meson_options=(
    --cross-file lib32
    -D b_ndebug=true
    -D b_lto=false
    -D buildtype=plain
    --wrap-mode=nofallback
    --force-fallback-for=syn
    -D prefix=/usr
    -D bindir=bin
    -D datadir=share
    -D includedir=include
    -D libdir=lib32
    -D sysconfdir=/etc
    -D sysconfdir=/etc
    -D platforms=x11,wayland
    -D egl-native-platform=auto
    -D android-stub=false
    -D android-libbacktrace=disabled
    -D dri3=enabled
    -D expat=auto
    -D gallium-drivers=r300,r600,radeonsi,nouveau,virgl,svga,swrast,i915,iris,zink,crocus
    -D gallium-extra-hud=true
    -D gallium-vdpau=enabled
    -D gallium-omx=disabled
    -D gallium-va=enabled
    -D gallium-xa=enabled
    -D gallium-nine=true
    -D gallium-d3d10umd=false
    -D gallium-opencl=icd
    -D gallium-rusticl=true
    -D rust_std=2021
    -D opencl-spirv=false
    -D static-libclc=all
    -D vulkan-drivers=amd,intel,intel_hasvk,swrast,virtio,imagination-experimental,nouveau
    -D imagination-srv=true
    -D shader-cache=enabled
    -D shader-cache-default=true
    -D vulkan-layers=device-select,intel-nullhw,overlay
    -D shared-glapi=enabled
    -D gles1=enabled
    -D gles2=enabled
    -D opengl=true
    -D gbm=enabled
    -D glx=dri
    -D egl=enabled
    -D glvnd=true
    -D microsoft-clc=disabled
    -D spirv-to-dxil=false
    -D glvnd-vendor-name=mesa
    -D glx-read-only-text=false
    -D llvm=enabled
    -D shared-llvm=enabled
    -D draw-use-llvm=true
    -D valgrind=disabled
    -D libunwind=enabled
    -D lmsensors=enabled
    -D build-tests=false
    -D enable-glcpp-tests=false
    -D build-aco-tests=false
    -D install-intel-gpu-tests=false
    -D selinux=false
    -D osmesa=true
    -D tools=[]
    -D power8=disabled
    -D xlib-lease=enabled
    -D glx-direct=true
    -D zstd=enabled
    -D zlib=enabled
    -D sse2=false
    -D perfetto=false
    -D teflon=false
    -D gpuvis=false
    -D vmware-mks-stats=false
    -D vulkan-beta=true
    -D intel-clc=system
    -D install-intel-clc=false
    -D intel-rt=disabled
    -D video-codecs=all
    -D gallium-d3d12-video=enabled
    -D gallium-d3d12-graphics=enabled
  )

  meson "${srcdir}"/mesa "${srcdir}"/build "${meson_options[@]}"
  meson configure --no-pager "${srcdir}"/build

  # Evil: Hack build to make proc-macro crate native
  # Should become unnecessary with Meson 1.3
  #sed -e '/^rule rust_COMPILER$/irule rust_HACK\n command = rustc -C linker=gcc $ARGS $in\n deps = gcc\n depfile = $targetdep\n description = Compiling native Rust source $in\n' \
  #    -e '/^build src\/gallium\/frontends\/rusticl\/librusticl_proc_macros\.so:/s/rust_COMPILER/rust_HACK/' \
  #    -e '/^ LINK_ARGS =/s/ src\/gallium\/frontends\/rusticl\/librusticl_proc_macros\.so//' \
  #    -i build/build.ninja

  meson compile -C "${srcdir}"/build

  # fake installation to be seperated into packages
  # outside of fakeroot but mesa doesn't need to chown/mod
  DESTDIR="${srcdir}"/fakeinstall meson install -C "${srcdir}"/build
}

_install(){
  local src f dir
  for src; do
    f="${src#fakeinstall/}"
    dir="${pkgdir}/${f%/*}"
    install -m755 -d "${dir}"
    mv -v "${src}" "${dir}/"
  done
}

_libdir=usr/lib32

package_lib32-vulkan-mesa-layers-git(){
  pkgdesc="Mesa's Vulkan layers (32-bit) (git version)"
  depends=(
     lib32-libdrm-git
     lib32-libxcb
     lib32-wayland
     vulkan-mesa-layers-git
  )
  conflicts=(
     lib32-vulkan-mesa-layer
     lib32-vulkan-mesa-layers
  )
  replaces=(lib32-vulkan-mesa-layer)
  provides=(lib32-vulkan-mesa-layers)

  rm -rv fakeinstall/usr/share/vulkan/explicit_layer.d
  rm -rv fakeinstall/usr/share/vulkan/implicit_layer.d
  _install fakeinstall/"${_libdir}"/libVkLayer_*.so
  rm -v fakeinstall/usr/bin/mesa-overlay-control.py


  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

# https://gitlab.freedesktop.org/mesa/mesa/-/issues/8591
# Now we can re-enable gallium-opencl : https://gitlab.freedesktop.org/mesa/mesa/-/issues/8591#note_2058098
package_lib32-opencl-clover-mesa-git(){
  pkgdesc="OpenCL support with clover for mesa drivers (32-bit) (git version)"
  depends=(
     lib32-clang-minimal-git
     lib32-clang-libs-minimal-git
     lib32-expat
     lib32-libdrm-git
     lib32-libelf
     lib32-spirv-llvm-translator-minimal-git
     lib32-zstd
     libclc-minimal-git
     opencl-clover-mesa-git
  )
  optdepends=('opencl-headers: headers necessary for OpenCL development')
  provides=(
     lib32-opencl-driver
     lib32-opencl-clover-mesa
  )
  replaces=(
     "lib32-opencl-mesa<=23.1.4-1"
     lib32-opencl-mesa-git
  )
  conflicts=(
     lib32-opencl-mesa
     lib32-opencl-mesa-git
  )

  rm -v fakeinstall/etc/OpenCL/vendors/mesa.icd
  _install fakeinstall/"${_libdir}"/libMesaOpenCL*
  _install fakeinstall/"${_libdir}"/gallium-pipe

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_lib32-opencl-rusticl-mesa-git(){
  pkgdesc="OpenCL support with rusticl for mesa drivers (32-bit) (git version)"
  depends=(
     lib32-clang-minimal-git
     lib32-clang-libs-minimal-git
     lib32-expat
     lib32-libdrm-git
     lib32-libelf
     lib32-lm_sensors
     lib32-spirv-llvm-translator-minimal-git
     lib32-zstd
     libclc-minimal-git
     opencl-rusticl-mesa-git
  )
  optdepends=('opencl-headers: headers necessary for OpenCL development')
  provides=(
     lib32-opencl-driver
     lib32-opencl-rusticl-mesa
  )
  replaces=(
     "lib32-opencl-mesa<=23.1.4-1"
     lib32-opencl-mesa-git
  )
  conflicts=(
     lib32-opencl-mesa
     lib32-opencl-mesa-git
  )

  rm -v fakeinstall/etc/OpenCL/vendors/rusticl.icd
  _install fakeinstall/"${_libdir}"/libRusticlOpenCL*

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_lib32-vulkan-intel-git(){
  pkgdesc="Intel's Vulkan mesa driver (32-bit) (git version)"
  depends=(
     lib32-libdrm-git
     lib32-libx11
     lib32-libxshmfence
     lib32-systemd
     lib32-wayland
     lib32-xcb-util-keysyms
     lib32-zstd
  )
  optdepends=('lib32-vulkan-mesa-layers: additional vulkan layers')
  conflicts=(
     lib32-vulkan-intel
     lib32-vulkan-intel-hasvk-git
  )
  provides=(lib32-vulkan-driver lib32-vulkan-intel)
  replaces=(lib32-vulkan-intel-hasvk-git)

  _install fakeinstall/usr/share/vulkan/icd.d/intel_*.json
  _install fakeinstall/"${_libdir}"/libvulkan_intel*.so

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_lib32-vulkan-radeon-git(){
  pkgdesc="Radeon's Vulkan mesa driver (32-bit) (git version)"
  depends=(
     lib32-libdrm-git
     lib32-libelf
     lib32-libx11
     lib32-libxshmfence
     lib32-llvm-libs-minimal-git
     lib32-systemd
     lib32-wayland
     lib32-xcb-util-keysyms
     lib32-zstd
     vulkan-radeon-git
  )
  optdepends=('lib32-vulkan-mesa-layers: additional vulkan layers')
  conflicts=(lib32-vulkan-radeon)
  provides=(
     lib32-vulkan-driver
     lib32-vulkan-radeon
  )

  rm -v fakeinstall/usr/share/drirc.d/00-radv-defaults.conf
  _install fakeinstall/usr/share/vulkan/icd.d/radeon_icd*.json
  _install fakeinstall/"${_libdir}"/libvulkan_radeon.so

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_lib32-vulkan-swrast-git(){
  pkgdesc='Vulkan software rasteriser driver (32-bit) (git version)'
  depends=(
     lib32-libdrm-git
     lib32-libunwind
     lib32-libx11
     lib32-libxshmfence
     lib32-llvm-libs-minimal-git
     lib32-systemd
     lib32-wayland
     lib32-xcb-util-keysyms
     lib32-zstd
  )
  optdepends=('lib32-vulkan-mesa-layers: additional vulkan layers')
  conflicts=(
     lib32-vulkan-mesa
     lib32-vulkan-swrast
  )
  replaces=(lib32-vulkan-mesa)
  provides=(
     lib32-vulkan-driver
     lib32-vulkan-swrast
  )

  _install fakeinstall/usr/share/vulkan/icd.d/lvp_icd*.json
  _install fakeinstall/"${_libdir}"/libvulkan_lvp.so

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_lib32-vulkan-virtio-git(){
  pkgdesc='Venus Vulkan mesa driver for Virtual Machines (32-bit) (git version)'
  depends=(
     lib32-libdrm-git
     lib32-libx11
     lib32-libxshmfence
     lib32-systemd
     lib32-wayland
     lib32-xcb-util-keysyms
     lib32-zstd
  )
  optdepends=('lib32-vulkan-mesa-layers: additional vulkan layers')
  conflicts=(lib32-vulkan-virtio)
  provides=(
     lib32-vulkan-driver
     lib32-vulkan-virtio
  )

  _install fakeinstall/usr/share/vulkan/icd.d/virtio_icd*.json
  _install fakeinstall/"${_libdir}"/libvulkan_virtio.so

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_lib32-libva-mesa-driver-git(){
  pkgdesc='VA-API drivers (32-bit) (git version)'
  depends=(
     lib32-expat
     lib32-libdrm-git
     lib32-libelf
     lib32-libx11
     lib32-libxshmfence
     lib32-llvm-libs-minimal-git
     lib32-zstd
  )
  conflicts=(lib32-libva-mesa-driver)
  provides=(
     lib32-libva-driver
     lib32-libva-mesa-driver
  )

  _install fakeinstall/"${_libdir}"/dri/*_drv_video.so

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_lib32-mesa-vdpau-git(){
  pkgdesc='VDPAU drivers (32-bit) (git version)'
  depends=(
     lib32-expat
     lib32-libdrm-git
     lib32-libelf
     lib32-libx11
     lib32-libxshmfence
     lib32-llvm-libs-minimal-git
     lib32-zstd
  )
  conflicts=(lib32-mesa-vdpau)
  provides=(
     lib32-vdpau-driver
     lib32-mesa-vdpau
  )

  _install fakeinstall/"${_libdir}"/vdpau

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_lib32-vulkan-imagination-git(){
  pkgdesc='Imagination Rogue PowerVR Vulkan driver (32-bit) (git version)'
  depends=(
     lib32-libdrm-git
     lib32-libelf
     lib32-libx11
     lib32-libunwind
     lib32-libxshmfence
     lib32-systemd
     lib32-llvm-libs-minimal-git
     lib32-wayland
     lib32-xcb-util-keysyms
     lib32-zstd
  )
  optdepends=('lib32-vulkan-mesa-layers: additional vulkan layers')
  provides=(lib32-vulkan-driver)

  _install fakeinstall/usr/share/vulkan/icd.d/powervr_mesa_icd*.json
  _install fakeinstall/"${_libdir}"/libvulkan_powervr_mesa.so

  # imagination-srv
  # Services backend for Imagination Technologies vulkan driver
  _install fakeinstall/"${_libdir}"/libpowervr_rogue.so

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_lib32-vulkan-nouveau-git(){
  pkgdesc="Nvidia's Vulkan mesa driver (32-bit) (git version)"
  depends=(
     lib32-libdrm-git
     lib32-libelf
     lib32-libx11
     lib32-libunwind
     lib32-libxshmfence
     lib32-systemd
     lib32-llvm-libs-minimal-git
     lib32-wayland
     lib32-xcb-util-keysyms
     lib32-zstd
  )
  optdepends=('lib32-vulkan-mesa-layers: additional vulkan layers')
  provides=(lib32-vulkan-driver)

  _install fakeinstall/usr/share/vulkan/icd.d/nouveau_icd*.json
  _install fakeinstall/"${_libdir}"/libvulkan_nouveau.so

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

package_lib32-mesa-git(){
  pkgdesc='An open-source implementation of the OpenGL specification (32-bit) (git version)'
  depends=(
     lib32-libdrm-git
     lib32-libelf
     lib32-libglvnd-git
     lib32-libunwind
     lib32-libxdamage
     lib32-libxshmfence
     lib32-libxxf86vm
     lib32-llvm-libs-minimal-git
     lib32-lm_sensors
     lib32-vulkan-icd-loader
     lib32-wayland
     lib32-zstd
     mesa-git
  )
  optdepends=(
     'opengl-man-pages: for the OpenGL API man pages'
  )
  provides=(
     lib32-mesa-libgl
     lib32-opengl-driver
     lib32-mesa
  )
  conflicts=(
     lib32-mesa-libgl
     lib32-mesa
  )
  replaces=(lib32-mesa-libgl)

  rm -v fakeinstall/usr/share/drirc.d/00-mesa-defaults.conf
  rm -v fakeinstall/usr/share/glvnd/egl_vendor.d/50_mesa.json

  # ati-dri, nouveau-dri, intel-dri, svga-dri, swrast, swr
  _install fakeinstall/$_libdir/dri/*_dri.so

  _install fakeinstall/$_libdir/d3d
  _install fakeinstall/$_libdir/lib{gbm,glapi}.so*
  _install fakeinstall/$_libdir/libOSMesa.so*
  _install fakeinstall/$_libdir/libxatracker.so*

  rm -rv fakeinstall/usr/include
  _install fakeinstall/$_libdir/pkgconfig

  # libglvnd support
  _install fakeinstall/$_libdir/libGLX_mesa.so*
  _install fakeinstall/$_libdir/libEGL_mesa.so*

  # indirect rendering
  ln -sr "$pkgdir"/$_libdir/libGLX_{mesa,indirect}.so.0

  # make sure there are no files left to install
  find fakeinstall -depth -print0 | xargs -0 rmdir

  install -Dm644 "${srcdir}"/mesa/docs/license.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
}

sha256sums=('SKIP'
            '97cb08ef32c5ccfd118cc3bd8d944bafafbad0f3e8f820b555f23c697d17a8f9')
