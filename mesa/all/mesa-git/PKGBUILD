# _     _            _        _          _____
#| |__ | | __ _  ___| | _____| | ___   _|___ /
#| '_ \| |/ _` |/ __| |/ / __| |/ / | | | |_ \
#| |_) | | (_| | (__|   <\__ \   <| |_| |___) |
#|_.__/|_|\__,_|\___|_|\_\___/_|\_\\__, |____/
#                                  |___/

#Maintainer: blacksky3 <https://github.com/blacksky3>
#Credits: Laurent Carlier <lordheavym@gmail.com>
#Credits: Lone_Wolf <lone_wolf@klaas-de-kat.nl>
#Credits: Reza Jahanbakhshi <reza.jahanbakhshi at gmail dot com

pkgname=mesa-git
pkgver=23.1.0_devel
pkgrel=1
commit=11bc2bde8365682ae0a06741aff00c12130f7dcb
arch=(x86_64)
url='https://mesa3d.org/'
license=(MIT)
depends=(libdrm libxcb wayland python libclc clang expat spirv-llvm-translator libx11 libxshmfence zstd systemd-libs libelf llvm-libs libunwind
         libxxf86vm libxdamage libomxil-bellagio lm_sensors libglvnd vulkan-icd-loader)
depends+=(libsensors.so libexpat.so libvulkan.so libexpat.so)
optdepends=('opengl-man-pages: for the OpenGL API man pages'
            'opencl-headers: headers necessary for OpenCL development')
makedepends=(meson ninja bison flex python python-mako valgrind cmake xorgproto wayland-protocols glslang libclc elfutils
             libarchive libconfig compiler-rt libxcb wayland libxml2 libx11 libvdpau libelf libglvnd ncurses libva libxrandr
             expat libdrm libxv libxshmfence libxxf86vm libxdamage zstd lm_sensors libunwind vulkan-icd-loader llvm clang llvm-libs
             glibc gcc gcc-libs libomxil-bellagio directx-headers systemd patch)
makedepends+=(python-ply) # intel-clc Ray tracing
makedepends+=(rust rust-bindgen spirv-tools spirv-llvm-translator) # rusticl dependencies
conflicts=(mesa opencl-mesa vulkan-intel vulkan-radeon vulkan-mesa vulkan-swrast vulkan-virtio vulkan-mesa-layers libva-mesa-driver mesa-vdpau)
conflicts+=(vulkan-intel-hasvk-git vulkan-imagination-git)
provides=(mesa opencl-mesa vulkan-intel vulkan-radeon vulkan-swrast vulkan-virtio vulkan-driver vulkan-mesa-layers libva-mesa-driver mesa-vdpau
          opengl-driver opencl-driver mesa-libgl libva-driver vdpau-driver)
replaces=(vulkan-mesa-layers-git opencl-mesa-git vulkan-intel-git vulkan-radeon-git vulkan-swrast-git vulkan-virtio-git libva-mesa-driver-git 
          mesa-vdpau-git vulkan-intel-hasvk-git vulkan-imagination-git)
options=(!debug !lto)
source=(git+https://anongit.freedesktop.org/git/mesa/mesa.git#commit=$commit
        # vulkan: fix builds with beta extensions
        https://gitlab.freedesktop.org/airlied/mesa/-/commit/c3444d52a35d0a46ab186de9fc63cf6b94a666a6.patch
        https://gitlab.freedesktop.org/airlied/mesa/-/commit/5a271b8ff8d1b1a560847718a806f652b9040e34.patch)

# ninja grabs all available cores and leaves almost nothing for other processes.
# this package uses the environment variable NINJAFLAGS to allow the user to change this behaviour
# The responsibility to validate the value of NINJAFLAGS lies with the user.
# If unsure, use NINJAFLAGS=""

pkgver(){
  cd ${srcdir}/mesa
  read -r _ver <VERSION
  echo ${_ver/-/_}.$(git rev-list --count HEAD).$(git rev-parse --short HEAD)
}

prepare(){
  cd ${srcdir}/mesa

  # Apply any patch
  local src
  for src in "${source[@]}"; do
    src="${src%%::*}"
    src="${src##*/}"
    [[ $src = *.patch ]] || continue
    msg2 "Applying patch $src..."
    patch -Np1 < "../$src"
  done
}

build(){
  cd ${srcdir}/mesa

  rm -rf -v build_64

  mkdir -p -v build_64

  meson setup build_64/ \
  -D b_ndebug=true \
  -D b_lto=false \
  -D buildtype=plain \
  --wrap-mode=nofallback \
  -Dprefix=/usr \
  -D sysconfdir=/etc \
  -Dplatforms=x11,wayland \
  -Degl-native-platform=auto \
  -Ddri3=enabled \
  -Dgallium-drivers=r300,r600,radeonsi,nouveau,virgl,svga,swrast,i915,iris,zink,crocus,d3d12 \
  -Dgallium-extra-hud=true \
  -Dgallium-vdpau=enabled \
  -Dgallium-omx=bellagio \
  -Dgallium-va=enabled \
  -Dgallium-xa=enabled \
  -Dgallium-nine=true \
  -Dgallium-d3d10umd=false \
  -Dgallium-opencl=icd \
  -Dgallium-rusticl=false \
  -D rust_std=2021 \
  -Dopencl-spirv=false \
  -Dvulkan-drivers=amd,intel,intel_hasvk,swrast,virtio-experimental,imagination-experimental \
  -Dimagination-srv=true \
  -Dshader-cache=enabled \
  -Dvulkan-layers=device-select,intel-nullhw,overlay \
  -Dshared-glapi=enabled \
  -Dgles1=enabled \
  -Dgles2=enabled \
  -Dopengl=true \
  -Dgbm=enabled \
  -Dglx=dri \
  -Degl=enabled \
  -Dglvnd=true \
  -Dmicrosoft-clc=disabled \
  -Dspirv-to-dxil=false \
  -Dglx-read-only-text=false \
  -Dllvm=enabled \
  -Dshared-llvm=enabled \
  -Ddraw-use-llvm=true \
  -Dvalgrind=enabled \
  -Dlibunwind=enabled \
  -Dlmsensors=enabled \
  -Dbuild-tests=false \
  -Denable-glcpp-tests=false \
  -Dbuild-aco-tests=false \
  -Dinstall-intel-gpu-tests=false \
  -Dselinux=false \
  -Dexecmem=true \
  -Dosmesa=true \
  -Dtools=[] \
  -Dxlib-lease=enabled \
  -Dglx-direct=true \
  -Dzstd=enabled \
  -Dzlib=enabled \
  -Dsse2=false \
  -Dperfetto=false \
  -Dvmware-mks-stats=false \
  -Dvulkan-beta=true \
  -Dintel-clc=enabled \
  -Dvideo-codecs=vc1dec,h264dec,h264enc,h265dec,h265enc \
  -Dgallium-d3d12-video=enabled

  meson configure --no-pager build_64/
  ninja $NINJAFLAGS -C build_64/
  meson compile -C build_64/
}

package_mesa-git(){
  # compiling mesa and installing to "$pkgdir"
  DESTDIR="${pkgdir}" ninja -C ${srcdir}/mesa/build_64/ install

  # remove script file from /usr/bin
  rm "${pkgdir}/usr/bin/mesa-overlay-control.py"
  rm -rf -v "${pkgdir}/usr/bin"

  # indirect rendering
  ln -s /usr/lib/libGLX_mesa.so.0 "${pkgdir}/usr/lib/libGLX_indirect.so.0"

  # installing license
  #install -Dt "$pkgdir"/usr/share/licenses/"$pkgname" -m644 LICENSE
  install -Dm644 "$srcdir"/mesa/docs/license.rst "$pkgdir"/usr/share/licenses/"$pkgname"/LICENSE
}

sha256sums=('SKIP'
            '1c5cb11114f5bd6538f5bab0b3fc00126c2fc4b49ec64923cbbe29ff1fe208ec')
