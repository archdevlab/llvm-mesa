#Maintainer: archdevlab <https://github.com/archdevlab>
#Credits: Evangelos Foutras <evangelos@foutrelis.com>
#Credits: Jan "heftig" Steffens <jan.steffens@gmail.com>
#Credits: Lone_Wolf <lone_wolf@klaas-de-kat.nl>

pkgname=compiler-rt-minimal-git
pkgdesc='Compiler runtime libraries for clang (git version)'
url='https://compiler-rt.llvm.org/'
pkgver=19.0.0
pkgrel=1
commit=2e26ee9dce32d12ffa9bfb7f7d3e97778f0b7a75
arch=(x86_64)
license=('custom:Apache 2.0 with LLVM Exception')
depends=(gcc-libs)
makedepends=(llvm-minimal-git cmake ninja python make git)
# Build 32-bit compiler-rt libraries on x86_64 (FS#41911)
makedepends_x86_64=(lib32-gcc-libs)
conflicts=(compiler-rt)
provides=(compiler-rt)
provides+=(compiler-rt-minimal-git compiler-rt-git)
options=(staticlibs)
source=(git+https://github.com/llvm/llvm-project.git#commit="${commit}"
        libclc_Refactor_build_system_to_allow_in-tree_builds_#87622.patch::https://github.com/llvm/llvm-project/commit/72f9881c3ffcf4be6361c3e4312d91c9c8d94a98.patch)

pkgver(){
  cd "${srcdir}"/llvm-project/

  # This will almost match the output of `llvm-config --version` when the
  # LLVM_APPEND_VC_REV cmake flag is turned on. The only difference is
  # dash being replaced with underscore because of Pacman requirements.
  local _pkgver=$(awk -F 'MAJOR |MINOR |PATCH |)' \
  'BEGIN { ORS="." ; i=0 } \
  /set\(LLVM_VERSION_/ { print $2 ; i++ ; if (i==2) ORS="" } \
  END { print "\n" }' \
  cmake/Modules/LLVMVersion.cmake).r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)
  echo "${_pkgver}"
}

prepare(){
  # revert change to libclc that causes build failure, see https://github.com/llvm/llvm-project/issues/88626
  patch --directory="${srcdir}"/llvm-project --reverse --strip=1 --input=${srcdir}/libclc_Refactor_build_system_to_allow_in-tree_builds_#87622.patch
}

build(){
# https://aur.archlinux.org/cgit/aur.git/commit/?h=llvm-minimal-git&id=ae64860f523a57e2c6d0a9e65ed8af8c82d1ca73
# build aborts with FORTIFY_SOURCE=3 , see https://github.com/llvm/llvm-project/issues/85509
export CFLAGS="${CFLAGS/_FORTIFY_SOURCE=3/_FORTIFY_SOURCE=2}"
export CXXFLAGS="${CFLAGS/_FORTIFY_SOURCE=3/_FORTIFY_SOURCE=2}"

  rm -rf "${srcdir}"/llvm-project/.git/

  local cmake_args=(
      -G "Unix Makefiles"
      -D CMAKE_BUILD_TYPE=Release
      -D CMAKE_INSTALL_PREFIX=/usr
      -D CMAKE_INSTALL_BINDIR=bin
      -D CMAKE_INSTALL_LIBDIR=lib
      -D CMAKE_INSTALL_INCLUDEDIR=include
      -D CMAKE_INSTALL_SYSCONFDIR=/etc
      -D CMAKE_INSTALL_DATADIR=share
      -D CMAKE_SKIP_RPATH=ON
      -D COMPILER_RT_INSTALL_PATH=/usr/lib/clang/19
      -D LLVM_CONFIG=/usr/bin/llvm-config
    )

  cmake -B "${srcdir}"/build -S "${srcdir}"/llvm-project/compiler-rt "${cmake_args[@]}" -Wno-dev

  make -j$(nproc) -C "${srcdir}"/build
}

package(){
  make -j$(nproc) -C "${srcdir}"/build DESTDIR="${pkgdir}" install

  # install license
  install -dm755 "${pkgdir}"/usr/share/licenses/"${pkgname}"
  install -m644 "${srcdir}"/llvm-project/compiler-rt/LICENSE.TXT "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
  install -m644 "${srcdir}"/llvm-project/compiler-rt/CREDITS.TXT "${pkgdir}"/usr/share/licenses/"${pkgname}"/CREDITS
  install -m644 "${srcdir}"/llvm-project/compiler-rt/CODE_OWNERS.TXT "${pkgdir}"/usr/share/licenses/"${pkgname}"/CODE_OWNERS
}

sha256sums=(SKIP
            SKIP)

# vim:set ts=8 sts=2 sw=2 et:
