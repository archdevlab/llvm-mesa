#Maintainer: archdevlab <https://github.com/archdevlab>
#Credits: Evangelos Foutras <foutrelis@archlinux.org>
#Credits: Jan "heftig" Steffens <jan.steffens@gmail.com>
#Credits: Lone_Wolf <lone_wolf@klaas-de-kat.nl>

pkgname=lldb-git
pkgdesc='Next generation, high-performance debugger (git version)'
url='https://lld.llvm.org/'
pkgver=20.0.0.r514187.gf0bd62d8709a
pkgrel=1
commit=335f1a72b22560e61f6170efef740c9c26b24f1a
arch=(x86_64)
license=('Apache-2.0 WITH LLVM-exception')
depends=(llvm-libs-git clang-git clang-libs-git gcc-libs zlib xz
         libedit ncurses libxml2 python)
makedepends=(llvm-git cmake ninja swig python-sphinx make git)
provides=(lldb lldb-minimal-git lldb-git)
conflicts=(lldb lldb-minimal-git)
replaces=(lldb-minimal-git)
source=(git+https://github.com/llvm/llvm-project.git#commit="${commit}")

pkgver(){
  cd "${srcdir}"/llvm-project/

  # This will almost match the output of `llvm-config --version` when the
  # LLVM_APPEND_VC_REV cmake flag is turned on. The only difference is
  # dash being replaced with underscore because of Pacman requirements.
  local _pkgver=$(awk -F 'MAJOR |MINOR |PATCH |)' \
  'BEGIN { ORS="." ; i=0 } \
  /set\(LLVM_VERSION_/ { print $2 ; i++ ; if (i==2) ORS="" } \
  END { print "\n" }' \
  cmake/Modules/LLVMVersion.cmake).r$(git rev-list --count HEAD).g$(git rev-parse --short HEAD)
  echo "${_pkgver}"
}

build(){
  rm -rf "${srcdir}"/llvm-project/.git/

  local cmake_args=(
    -G "Unix Makefiles"
    -D CMAKE_BUILD_TYPE=Release
    -D CMAKE_INSTALL_PREFIX=/usr
    -D CMAKE_SKIP_INSTALL_RPATH=ON
    -D CLANG_LINK_CLANG_DYLIB=ON
    -D LLVM_LINK_LLVM_DYLIB=ON
    -D LLVM_INCLUDE_TESTS=OFF
    -D LLVM_BUILD_DOCS=OFF
    -D LLVM_MAIN_SRC_DIR="${srcdir}"/llvm-project/llvm
    -D SPHINX_WARNINGS_AS_ERRORS=OFF
    -D LLVM_CONFIG=/usr/bin/llvm-config
  )

  cmake -B "${srcdir}"/build -S "${srcdir}"/llvm-project/lldb "${cmake_args[@]}" -Wno-dev

  make -j$(nproc) -C "${srcdir}"/build
}

_python_optimize(){
  python -m compileall "$@"
  python -O -m compileall "$@"
  python -OO -m compileall "$@"
}

package(){
  make -j$(nproc) -C "${srcdir}"/build DESTDIR="${pkgdir}" install

  # Compile Python scripts
  _py=$([[ "$(python -V)" =~ Python[[:space:]]*([0-9]+.[0-9]+) ]] && echo ${BASH_REMATCH[1]})
  local site_packages="/usr/lib/python$_py/site-packages"
  install -d "${pkgdir}"/"${site_packages}"
  _python_optimize "${srcdir}"/build "${pkgdir}"/"${site_packages}"
  # optimize other python files
  _python_optimize "${pkgdir}"/usr/share

  # install license
  install -dm755 "${pkgdir}"/usr/share/licenses/"${pkgname}"
  install -m644 "${srcdir}"/llvm-project/lldb/LICENSE.TXT "${pkgdir}"/usr/share/licenses/"${pkgname}"/LICENSE
  install -m644 "${srcdir}"/llvm-project/lldb/CodeOwners.rst "${pkgdir}"/usr/share/licenses/"${pkgname}"/CodeOwners
}

sha256sums=(SKIP)

# vim:set ts=8 sts=2 sw=2 et:
